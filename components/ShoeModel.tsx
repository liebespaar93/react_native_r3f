/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { useAssets } from 'expo-asset'

type GLTFResult = GLTF & {
    nodes: {
        shoe: THREE.Mesh
        shoe_1: THREE.Mesh
        shoe_2: THREE.Mesh
        shoe_3: THREE.Mesh
        shoe_4: THREE.Mesh
        shoe_5: THREE.Mesh
        shoe_6: THREE.Mesh
        shoe_7: THREE.Mesh
    }
    materials: {
        mesh: THREE.MeshStandardMaterial
        sole: THREE.MeshStandardMaterial
        stripes: THREE.MeshStandardMaterial
        band: THREE.MeshStandardMaterial
        caps: THREE.MeshStandardMaterial
        patch: THREE.MeshStandardMaterial
        inner: THREE.MeshStandardMaterial
        laces: THREE.MeshStandardMaterial
    }
}

export function ShoeModel(props: JSX.IntrinsicElements['group']) {
    const loadfile = require('@/assets/models/shoe.glb')
    const helloAsset = useAssets(loadfile);

    if (!(helloAsset[0] && helloAsset[0][0].localUri))
        return <boxGeometry></boxGeometry>

    const { nodes, materials } = useGLTF(helloAsset[0][0].localUri) as GLTFResult
    return (
        <group {...props} dispose={null}>
            <mesh castShadow receiveShadow geometry={nodes.shoe.geometry} material={materials.mesh} />
            <mesh castShadow receiveShadow geometry={nodes.shoe_1.geometry} material={materials.sole} />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.shoe_2.geometry}
                material={materials.stripes}
            />
            <mesh castShadow receiveShadow geometry={nodes.shoe_3.geometry} material={materials.band} />
            <mesh castShadow receiveShadow geometry={nodes.shoe_4.geometry} material={materials.caps} />
            <mesh castShadow receiveShadow geometry={nodes.shoe_5.geometry} material={materials.patch} />
            <mesh castShadow receiveShadow geometry={nodes.shoe_6.geometry} material={materials.inner} />
            <mesh castShadow receiveShadow geometry={nodes.shoe_7.geometry} material={materials.laces} />
        </group>
    )
}